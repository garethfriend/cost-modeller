{"version":3,"sources":["codes.js","redux/currency/index.js","redux/types.js","redux/config/index.js","redux/error/index.js","redux/collections/index.js","redux/ingredient/index.js","redux/rootReducer.js","redux/mockState.js","Root.js","components/Footer.js","components/AppBarMenu.js","components/AppBarTabs.js","components/AppHeader.js","components/HowTo.js","redux/selectors.js","components/CurrencyDropdown.js","components/MeasureDropdown.js","components/UnitTypeDropdown.js","components/ProjectOptions.js","components/IngredientList.js","components/IngredientForm.js","components/TopToolBar.js","components/Calculator.js","components/About.js","history.js","components/App.js","index.js"],"names":["AED","ARS","AUD","BGN","BRL","BSD","CAD","CHF","CLP","CNY","COP","CZK","DKK","DOP","EGP","EUR","FJD","GBP","GTQ","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","KZT","MVR","MXN","MYR","NOK","NZD","PAB","PEN","PHP","PKR","PLN","PYG","RON","RUB","SAR","SEK","SGD","THB","TRY","TWD","UAH","USD","UYU","ZAR","INITIAL_RATES","Object","fromEntries","keys","codes","map","code","loadRatesError","error","type","payload","rates","isLoading","currencyReducer","combineReducers","currency","action","configReducer","unitType","state","baseUnit","baseCurrency","getUnitType","getUnitDefinitions","createSelector","volume","list","mass","errorsReducer","collectionAssign","collectionName","collection","ids","filter","id","includes","createCollectionReducer","data","collectionsReducer","variable","fixed","balance","mapIngredientProps","ingredientName","pricedInCurrency","cost","parseFloat","numberOfUnits","unit","quantity","ingredientReducer","ingredient","config","errors","collections","ingredients","editing","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","children","initialState","mockState","store","createStore","rootReducer","applyMiddleware","thunk","useStyles","makeStyles","theme","footer","position","top","bottom","homeButton","marginRight","spacing","link","flexGrow","Footer","props","classes","Grid","item","AppBar","className","color","Toolbar","variant","Link","href","target","rel","Tooltip","title","IconButton","onClick","scrollTo","menuButton","withRouter","menuItems","history","path","location","pathname","useState","anchorEl","setAnchorEl","edge","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","menuItem","menuTitle","pageURL","MenuItem","push","handleMenuClick","key","tabNameToIndex","0","1","2","indexToTabName","selectedTab","setSelectedTab","Tabs","value","onChange","newValue","Tab","label","root","breakpoints","down","AppHeader","useTheme","isMobile","useMediaQuery","Typography","HowTo","fromConfig","getBaseCurrency","getBaseUnit","getRates","fromCurrency","getIngredients","getCollectionIngredients","createCachedSelector","totalQuantityCalculation","reduce","prev","curr","getCollectionTotalQuantity","getIngredientsTotalQuantity","costCalculation","collectionTotal","ingredientsTotal","totalQuantity","baseCode","priceCode","price","rateConversion","from","to","connect","currencyOptions","codeDescription","labelId","FormControl","size","fullWidth","InputLabel","Select","definitions","pluralUnitNames","measureOptions","useMemo","measure","index","UnitTypeDropdown","buttonFloat","float","drawerContainer","padding","dropdownContainer","changeBaseCurrency","changeUnitType","changeBaseUnits","handleOptionsClose","Drawer","anchor","container","direction","alignItems","xs","md","editButton","marginLeft","deleteButton","ingName","width","wordWrap","ingQuant","li","maxWidth","topDivider","marginTop","deleteIngredient","concat","handleFormOpen","Divider","List","ListItem","radioGroup","flexWrap","flexDirection","justifyContent","radio","Transition","React","forwardRef","ref","Slide","ownProps","find","getIngredient","getIngredientCollection","editIngredient","createIngredient","uuidv4","handleFormClose","useForm","register","handleSubmit","control","defaultValues","rules","required","message","validate","Dialog","TransitionComponent","DialogTitle","DialogContent","TextField","inputRef","name","defaultValue","helperText","sm","inputProps","min","step","as","CurrencyDropdown","MeasureDropdown","InputProps","endAdornment","InputAdornment","FormLabel","RadioGroup","row","FormControlLabel","Radio","labelPlacement","DialogActions","Button","onSubmit","iconButton","setOptionsVisible","alignContent","graph","backgroundColor","Calculator","optionsVisible","formVisible","setFormVisible","selectedIngredientId","setSelectedIngredientId","About","createBrowserHistory","fetchCurrencies","dispatch","a","axios","get","response","result","useEffect","exact","component","ReactDOM","render","Root","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.a095e164.chunk.js","sourcesContent":["export default {\r\n    AED:\t\"UAE Dirham\",\r\n    ARS:\t\"Argentine Peso\",\r\n    AUD:\t\"Australian Dollar\",   \r\n    BGN:\t\"Bulgarian Lev\",\r\n    BRL:\t\"Brazilian Real\",\r\n    BSD:\t\"Bahamian Dollar\",\r\n    CAD:\t\"Canadian Dollar\",\r\n    CHF:\t\"Swiss Franc\",\r\n    CLP:\t\"Chilean Peso\",\r\n    CNY:\t\"Chinese Renminbi\",\r\n    COP:\t\"Colombian Peso\",\r\n    CZK:\t\"Czech Koruna\",\r\n    DKK:\t\"Danish Krone\",\r\n    DOP:\t\"Dominican Peso\",\r\n    EGP:\t\"Egyptian Pound\",\r\n    EUR:\t\"Euro\",\r\n    FJD:\t\"Fiji Dollar\",\r\n    GBP:\t\"Pound Sterling\",\r\n    GTQ:\t\"Guatemalan Quetzal\",\r\n    HKD:\t\"Hong Kong Dollar\",\r\n    HRK:\t\"Croatian Kuna\",\r\n    HUF:\t\"Hungarian Forint\",\r\n    IDR:\t\"Indonesian Rupiah\",\r\n    ILS:\t\"Israeli New Shekel\",\r\n    INR:\t\"Indian Rupee\",\r\n    ISK:\t\"Icelandic Krona\",\r\n    JPY:\t\"Japanese Yen\",\r\n    KRW:\t\"South Korean Won\",\r\n    KZT:\t\"Kazakhstani Tenge\",\r\n    MVR:\t\"Maldivian Rufiyaa\",\r\n    MXN:\t\"Mexican Peso\",\r\n    MYR:\t\"Malaysian Ringgit\",\r\n    NOK:\t\"Norwegian Krone\",\r\n    NZD:\t\"New Zealand Dollar\",\r\n    PAB:\t\"Panamanian Balboa\",\r\n    PEN:\t\"Peruvian Sol\",\r\n    PHP:\t\"Philippine Peso\",\r\n    PKR:\t\"Pakistani Rupee\",\r\n    PLN:\t\"Polish Zloty\",\r\n    PYG:\t\"Paraguayan Guarani\",\r\n    RON:\t\"Romanian Leu\",\r\n    RUB:\t\"Russian Ruble\",\r\n    SAR:\t\"Saudi Riyal\",\r\n    SEK:\t\"Swedish Krona\",\r\n    SGD:\t\"Singapore Dollar\",\r\n    THB:\t\"Thai Baht\",\r\n    TRY:\t\"Turkish Lira\",\r\n    TWD:\t\"New Taiwan Dollar\",\r\n    UAH:\t\"Ukrainian Hryvnia\",\r\n    USD:\t\"United States Dollar\",\r\n    UYU:\t\"Uruguayan Peso\",\r\n    ZAR:\t\"South African Rand\"\r\n}\r\n\r\n\r\n","import { \r\n    FETCH_CURRENCIES_REQUEST,\r\n    FETCH_CURRENCIES_SUCCESS,\r\n    FETCH_CURRENCIES_ERROR \r\n} from '../types'\r\nimport { combineReducers } from 'redux'\r\nimport axios from 'axios'\r\nimport codes from '../../codes'\r\n\r\n// CONSTANTS\r\n\r\nconst INITIAL_RATES = Object.fromEntries(Object.keys(codes).map((code) => [code, 1])) // default all exchange rates to 1 if not replaced by API data\r\n\r\n// ACTIONS\r\n\r\nconst loadRatesRequest = () => ({\r\n    type: FETCH_CURRENCIES_REQUEST,\r\n        payload: {\r\n            isLoading: true\r\n        }\r\n})\r\n   \r\nconst loadRatesSuccess = (rates) => ({\r\n    type: FETCH_CURRENCIES_SUCCESS,\r\n    payload:{\r\n        rates: rates,\r\n        isLoading: false,\r\n        error: null\r\n    }\r\n})\r\n\r\nconst loadRatesError = (error) => ({\r\n    type: FETCH_CURRENCIES_ERROR,\r\n    payload:{\r\n        rates: INITIAL_RATES,\r\n        isLoading: false,\r\n        error: error\r\n    }\r\n})\r\n\r\nexport const fetchCurrencies = () => {\r\n    return async function(dispatch) {\r\n        dispatch(loadRatesRequest())\r\n        try{\r\n            let response = (await axios.get('https://open.exchangerate-api.com/v6/latest')).data\r\n            if(response.result === \"success\"){\r\n                dispatch(loadRatesSuccess(response.rates))\r\n            }else{\r\n                dispatch(loadRatesError(response[\"error-type\"]))\r\n        }\r\n        }catch(error){\r\n            dispatch(loadRatesError(error.message))\r\n        }\r\n    }\r\n}\r\n\r\n// REDUCERS\r\n\r\nconst ratesReducer = (currency = INITIAL_RATES, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n        case FETCH_CURRENCIES_ERROR:\r\n            return action.payload.rates\r\n        default:\r\n            return currency\r\n    }\r\n}\r\n\r\nconst loadingReducer = (isLoading = true, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n        case FETCH_CURRENCIES_ERROR:\r\n        case FETCH_CURRENCIES_REQUEST:\r\n            return action.payload.isLoading\r\n        default:\r\n            return isLoading\r\n    }\r\n}\r\n\r\nconst currencyReducer = combineReducers({\r\n    rates: ratesReducer,\r\n    isLoading: loadingReducer,\r\n})\r\n\r\nexport default currencyReducer\r\n\r\n// SELECTORS\r\n\r\nexport const getRates = state => state.rates\r\nexport const getLoadingStatus = state => state.isLoading\r\n\r\n\r\n","// currency related\r\nexport const FETCH_CURRENCIES_REQUEST = 'FETCH_CURRENCIES_REQUEST'\r\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS'\r\nexport const FETCH_CURRENCIES_ERROR = 'FETCH_CURRENCIES_ERROR'\r\n\r\n// config related\r\nexport const UNIT_TYPES_SELECTED = 'UNIT_TYPES_SELECTED'\r\nexport const BASE_UNITS_SELECTED = 'BASE_UNITS_SELECTED'\r\nexport const BASE_CURRENCY_SELECTED = 'BASE_CURRENCY_SELECTED'\r\n\r\n// ingredient related\r\nexport const CREATE_INGREDIENT = 'CREATE_INGREDIENT'\r\nexport const EDIT_INGREDIENT = 'EDIT_INGREDIENT'\r\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT'\r\nexport const ASSIGN_INGREDIENT = 'ASSIGN_INGREDIENT'\r\nexport const OPEN_INGREDIENT = 'OPEN_INGREDIENT'\r\nexport const CLOSE_INGREDIENT = 'CLOSE_INGREDIENT'\r\n\r\n// group related\r\nexport const CLEAR_GROUP = 'CLEAR_GROUP'\r\nexport const SIZE_GROUP = 'SIZE_GROUP'\r\n\r\n// total quantity related\r\nexport const TOTAL_QUANTITY_CHANGE = 'TOTAL_QUANTITY_CHANGE'\r\nexport const TOTAL_QUANTITY_UNITS_CHANGE = 'TOTAL_QUANTITY_UNITS_CHANGE'\r\n","import { \r\n    UNIT_TYPES_SELECTED,\r\n    BASE_UNITS_SELECTED,\r\n    BASE_CURRENCY_SELECTED \r\n} from '../types'\r\nimport { combineReducers } from 'redux'\r\nimport { createSelector } from 'reselect'\r\nimport { mass, volume } from 'units-converter'\r\n\r\n// ACTIONS\r\n\r\nexport const changeUnitType = (type) => ({\r\n    type: UNIT_TYPES_SELECTED,\r\n    payload: type\r\n})\r\n\r\nexport const changeBaseUnits = (unit) => ({\r\n    type: BASE_UNITS_SELECTED,\r\n    payload: unit\r\n})\r\n\r\nexport const changeBaseCurrency = (code) => ({\r\n    type: BASE_CURRENCY_SELECTED,\r\n    payload: code\r\n})\r\n\r\n// REDUCERS\r\n\r\nconst unitTypeReducer = (state = 'mass', action) => {\r\n    switch (action.type) {\r\n        case UNIT_TYPES_SELECTED:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst baseUnitsReducer = (state = 'g', action) => {\r\n    switch (action.type) {\r\n        case BASE_UNITS_SELECTED:\r\n            return action.payload\r\n        case UNIT_TYPES_SELECTED:\r\n            return action.payload === 'mass' ? 'g' : 'ml'\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst baseCurrencyReducer = (state = 'USD', action) => {\r\n    switch (action.type) {\r\n        case BASE_CURRENCY_SELECTED:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst configReducer = combineReducers({\r\n    unitType: unitTypeReducer,\r\n    baseUnit: baseUnitsReducer,\r\n    baseCurrency: baseCurrencyReducer\r\n})\r\n\r\nexport default configReducer\r\n\r\n// SELECTORS\r\n\r\nexport const getBaseCurrency = state => state.baseCurrency\r\n\r\nexport const getBaseUnit = state => state.baseUnit\r\n\r\nexport const getUnitType = state => state.unitType\r\n\r\n/**\r\n * Function to retrun the appropriate unitTypes definitions object based on the value of config.unitType piece of state.\r\n * @function getUnitDefinitions\r\n * @param {object} state - redux state object.\r\n * @returns {object} - Unit type definitions object.\r\n */\r\nexport const getUnitDefinitions = createSelector(\r\n    getUnitType,\r\n    (unitType) => {\r\n        switch (unitType) {\r\n            case 'volume':\r\n                return volume().list()\r\n            case 'mass':\r\n            default:\r\n                return mass().list() \r\n        }\r\n    }\r\n)","import { FETCH_CURRENCIES_ERROR, FETCH_CURRENCIES_SUCCESS } from \"../types\"\r\n\r\n// REDUCERS\r\n\r\nconst INITIAL_ERROR = null\r\n   \r\nconst errorsReducer = (state = INITIAL_ERROR, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_ERROR:\r\n            return action.payload.error\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n            return null\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport default errorsReducer","import {\r\n    CREATE_INGREDIENT,\r\n    EDIT_INGREDIENT,\r\n    DELETE_INGREDIENT,\r\n    ASSIGN_INGREDIENT\r\n} from '../types'\r\nimport {combineReducers} from 'redux'\r\n\r\n// ACTIONS\r\n\r\nexport const assignIngredient = (collection, ids) => {\r\n    const idsArray = [].concat(ids) // allows passing of a single value or array\r\n    return {\r\n        type: ASSIGN_INGREDIENT,\r\n        payload: {\r\n            ids: idsArray,\r\n            collection: collection\r\n        }\r\n    }\r\n}\r\n    \r\n\r\n// REDUCERS\r\n\r\nconst collectionAssign = (state, collectionName, action) => {\r\n    // if this is the collection they are being assigned to only add the ids not already present\r\n    if (action.payload.collection === collectionName) {\r\n        return [...state, ...action.payload.ids.filter(id => !state.includes(id))]\r\n    // if this is not the collection they are being assigned to remove those ids that are present in the payload\r\n    } else if (action.payload.collection !== collectionName) {\r\n        return state.filter(id => !action.payload.ids.includes(id))\r\n    } else {\r\n        return state\r\n    }\r\n} \r\n\r\nconst createCollectionReducer = collectionName => (state = [], action) => {\r\n    switch (action.type) {\r\n        case ASSIGN_INGREDIENT:\r\n            return collectionAssign(state, collectionName, action)\r\n        case CREATE_INGREDIENT:\r\n            return action.payload.data.collection === collectionName ? [...state, action.payload.id] : state\r\n        case EDIT_INGREDIENT:\r\n            return action.payload.data.collection === collectionName ? [...state, action.payload.id] : state\r\n        case DELETE_INGREDIENT:\r\n            return state.filter(id => !action.payload.includes(id))\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst collectionsReducer = combineReducers({\r\n    // this is what we are modelling the changes to\r\n    variable: createCollectionReducer('variable'),\r\n    // this portion's fraction does not change - no matter what else we mess with ingredients in here are fixed quantity\r\n    fixed: createCollectionReducer('fixed'),\r\n    // this portion grows and shrinks to accomodate the changes in the variable quantity\r\n    balance: createCollectionReducer('balance'),\r\n})\r\n\r\nexport default collectionsReducer\r\n","import {\r\n    v4 as uuidv4\r\n} from 'uuid'\r\nimport {\r\n    CREATE_INGREDIENT,\r\n    EDIT_INGREDIENT,\r\n    DELETE_INGREDIENT,\r\n} from '../types'\r\n\r\n\r\n// ACTIONS\r\n\r\nexport const createIngredient = (data) => ({\r\n    type: CREATE_INGREDIENT,\r\n    payload: {\r\n        id: uuidv4(),\r\n        data: data\r\n    }\r\n})\r\n\r\nexport const editIngredient = (id, data) => ({\r\n    type: EDIT_INGREDIENT,\r\n    payload: {\r\n        id: id,\r\n        data: data\r\n    }\r\n})\r\n\r\nexport const deleteIngredient = (ids) => {\r\n    const idsArray = [].concat(ids)    \r\n    return {\r\n        type: DELETE_INGREDIENT,\r\n        payload: idsArray\r\n    }\r\n}\r\n\r\n// REDUCERS\r\n\r\nconst mapIngredientProps = (action) => ({\r\n    id: action.payload.id,\r\n    ingredientName: action.payload.data.ingredientName,\r\n    pricedInCurrency: action.payload.data.pricedInCurrency,\r\n    cost: parseFloat(action.payload.data.cost),\r\n    numberOfUnits: parseFloat(action.payload.data.numberOfUnits),\r\n    unit: action.payload.data.unit,\r\n    quantity: parseFloat(action.payload.data.quantity),\r\n})\r\n\r\nconst ingredientReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CREATE_INGREDIENT:\r\n            return [...state, mapIngredientProps(action)]\r\n        case EDIT_INGREDIENT:\r\n            return state.map((ingredient) => {\r\n                return ingredient.id !== action.payload.id ? ingredient : mapIngredientProps(action)\r\n            })\r\n        case DELETE_INGREDIENT:\r\n            return state.filter(ingredient => !action.payload.includes(ingredient.id))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ingredientReducer\r\n\r\n\r\n","import { combineReducers } from 'redux'\r\nimport currencyReducer from './currency'\r\nimport configReducer from './config'\r\nimport errorsReducer from './error'\r\nimport collectionsReducer from './collections'\r\nimport ingredientReducer from './ingredient'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    currency: currencyReducer,\r\n    config: configReducer,\r\n    errors: errorsReducer,\r\n    collections: collectionsReducer,\r\n    ingredients: ingredientReducer\r\n})\r\n\r\n","export default {\r\n    currency: {\r\n        rates: {\r\n            USD: 1,\r\n            AED: 3.67,\r\n            ARS: 73.51,\r\n            AUD: 1.4,\r\n            BGN: 1.66,\r\n            BRL: 5.59,\r\n            BSD: 1,\r\n            CAD: 1.32,\r\n            CHF: 0.912,\r\n            CLP: 786.07,\r\n            CNY: 6.92,\r\n            COP: 3742.1,\r\n            CZK: 22.1,\r\n            DKK: 6.31,\r\n            DOP: 57.91,\r\n            EGP: 15.9,\r\n            EUR: 0.848,\r\n            FJD: 2.13,\r\n            GBP: 0.762,\r\n            GTQ: 7.69,\r\n            HKD: 7.75,\r\n            HRK: 6.39,\r\n            HUF: 296.97,\r\n            IDR: 14912.39,\r\n            ILS: 3.4,\r\n            INR: 74.94,\r\n            ISK: 137.67,\r\n            JPY: 105.77,\r\n            KRW: 1191.2,\r\n            KZT: 418,\r\n            MVR: 15.4,\r\n            MXN: 22.08,\r\n            MYR: 4.18,\r\n            NOK: 8.99,\r\n            NZD: 1.53,\r\n            PAB: 1,\r\n            PEN: 3.58,\r\n            PHP: 48.69,\r\n            PKR: 167.91,\r\n            PLN: 3.72,\r\n            PYG: 7144,\r\n            RON: 4.1,\r\n            RUB: 74.41,\r\n            SAR: 3.75,\r\n            SEK: 8.79,\r\n            SGD: 1.37,\r\n            THB: 31.54,\r\n            TRY: 7.3,\r\n            TWD: 29.4,\r\n            UAH: 27.32,\r\n            UYU: 43.13,\r\n            ZAR: 17.23\r\n        },\r\n        isLoading: false\r\n    },\r\n    errors: null,\r\n    config: {\r\n        unitType: 'mass',\r\n        baseCurrency: 'CAD',\r\n        baseUnit: 'g',\r\n    },\r\n    collections: {\r\n        variable: ['945-6647-9977'],\r\n        fixed: ['154-6876-8443', '249-8388-8355', '033-0058-1111'],\r\n        balance: ['158-2987-3546', '249-3888-8999'],\r\n    },\r\n    ingredients: [{\r\n        id: '033-0058-1111',\r\n        ingredientName: 'Water',\r\n        pricedInCurrency: 'GBP',\r\n        cost: 1,\r\n        numberOfUnits: 10,\r\n        unit: 'kg',\r\n        quantity: 400,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '154-6876-8443',\r\n        ingredientName: 'Coconut Oil',\r\n        pricedInCurrency: 'EUR',\r\n        cost: 10,\r\n        numberOfUnits: 15,\r\n        unit: 'kg',\r\n        quantity: 100,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '158-2987-3546',\r\n        ingredientName: 'Silicone',\r\n        pricedInCurrency: 'USD',\r\n        cost: 106,\r\n        numberOfUnits: 150,\r\n        unit: 'kg',\r\n        quantity: 24,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '249-3888-8999',\r\n        ingredientName: 'Pigment A',\r\n        pricedInCurrency: 'GBP',\r\n        cost: 100,\r\n        numberOfUnits: 134,\r\n        unit: 'g',\r\n        quantity: 0.023,\r\n        editing: false\r\n    },{\r\n        id: '249-8388-8355',\r\n        ingredientName: 'Bulking Agent 23',\r\n        pricedInCurrency: 'USD',\r\n        cost: 10,\r\n        numberOfUnits: 75,\r\n        unit: 'kg',\r\n        quantity: 240,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '945-6647-9977',\r\n        ingredientName: 'Active Ingredient',\r\n        pricedInCurrency: 'CAD',\r\n        cost: 1000,\r\n        numberOfUnits: 150,\r\n        unit: 'g',\r\n        quantity: 0.3,\r\n        editing: true\r\n    }]\r\n}","import React from 'react'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/rootReducer'\r\nimport mockState from './redux/mockState'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default ({ children, initialState=mockState }) => {\r\n    return (\r\n        <Provider store={createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)))}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        position: 'fixed',\r\n        top: 'auto',\r\n        bottom: 0\r\n    },\r\n    homeButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    link: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nconst Footer = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid item>\r\n            <AppBar className={classes.footer} color='secondary' >\r\n                <Toolbar variant='dense'>\r\n                    <Link\r\n                        className={classes.link} \r\n                        href='https://www.exchangerate-api.com' \r\n                        target='_blank' \r\n                        rel='noopener noreferrer'\r\n                        color='inherit'\r\n                    >\r\n                        Currency Conversion by ExchangeRate-API.com\r\n                    </Link>\r\n                    <Tooltip title='back to top'>\r\n                        <IconButton className={classes.homeButton} onClick={() => window.scrollTo(0, 0)}>\r\n                            <ArrowUpwardIcon color='inherit' />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    }\r\n}))\r\n\r\n\r\nconst AppBarMenu = ({ menuItems, history, location }) => {\r\n    const path = location.pathname\r\n    \r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    \r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    \r\n    const handleMenuClick = pageURL => {\r\n        if (path !== pageURL) {\r\n            history.push(pageURL)\r\n        }    \r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            onClick={handleMenu}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n            id='menu-appbar'\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right'\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right'\r\n            }}\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n            >\r\n                {menuItems.map(menuItem => {\r\n                    const { menuTitle, pageURL } = menuItem\r\n                    return (\r\n                    <MenuItem onClick={() => handleMenuClick(pageURL)} key={menuTitle}>\r\n                        {menuTitle}\r\n                    </MenuItem>\r\n                    )\r\n                })}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AppBarMenu)\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nconst tabNameToIndex = { 0: '/', 1: '/howto', 2: '/about' }\r\nconst indexToTabName = { '/': 0, '/howto': 1, '/about': 2 }\r\n\r\nconst AppBarTabs = ({ history, location, menuItems }) => {\r\n    const path = location.pathname\r\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[path])\r\n        \r\n    const handleTabChange = (event, newValue) => {\r\n        if(selectedTab !== newValue) {\r\n            history.push(tabNameToIndex[newValue])\r\n        }\r\n        setSelectedTab(newValue)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={selectedTab} onChange={handleTabChange} >\r\n                {menuItems.map(menuItem => <Tab label={menuItem.menuTitle} key={menuItem.menuTitle}/>)}\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AppBarTabs)\r\n","import React from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport AppBarMenu from './AppBarMenu'\r\nimport AppBarTabs from './AppBarTabs'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    title: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexGrow: 1\r\n        },\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nconst menuItems = [\r\n    { menuTitle: 'Calculator', pageURL: '/' },\r\n    { menuTitle: 'How To', pageURL: '/howto' },\r\n    { menuTitle: 'About', pageURL: '/about' }\r\n]\r\n\r\nconst AppHeader = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n     \r\n    return (\r\n      <Grid item className={classes.root}>\r\n         <AppBar position='static'>\r\n            <Toolbar>\r\n              <Typography variant='h5' className={classes.title}>\r\n                Ingredient Cost Modeller\r\n              </Typography>\r\n              {isMobile ? <AppBarMenu menuItems={menuItems} /> : <AppBarTabs menuItems={menuItems} />}\r\n            </Toolbar>\r\n          </AppBar>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\n\r\nconst HowTo = () => {\r\n    return (\r\n        <div>\r\n           How to use the calulator \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowTo\r\n","// SELECTORS\r\nimport { createSelector } from 'reselect'\r\nimport {createCachedSelector} from 're-reselect'\r\nimport { mass, volume } from 'units-converter'\r\n\r\nimport * as fromCurrency from './currency'\r\nimport * as fromConfig from './config'\r\n\r\n// Selectors that need to know about the state slice shape are defined in the same file as the associated reducer and imported here.\r\n\r\n// CONFIG RELATED SELECTORS\r\n// memoized selector that maps the unit definitions for the MeasureDropdown component\r\nconst getUnitDefinitions = state => fromConfig.getUnitDefinitions(state.config)\r\nconst getBaseCurrency = state => fromConfig.getBaseCurrency(state.config)\r\nconst getBaseUnit = state => fromConfig.getBaseUnit(state.config)\r\nconst getUnitType = state => fromConfig.getUnitType(state.config)\r\nconst getConfig = state => state.config\r\n\r\n\r\n// CURRENCY AND CURRENCY CONVERSION SELECTORS\r\nconst getRates = state => fromCurrency.getRates(state.currency)\r\nconst getLoadingStatus = state => fromCurrency.getLoadingStatus(state.currency)\r\n\r\n/**\r\n * Function for converting between a price currency and the base currency.\r\n * @function getBaseCurrencyExchangeRate\r\n * @param {object} state - redux state object\r\n * @param {string} priceCurrency - the three letter currency code of the currency being converted to base currency.\r\n * @returns {number} an exchange rate between the two currencies\r\n */\r\nconst getBaseCurrencyExchangeRate = (state, priceCurrency) => {\r\n        return state.currency.rates[state.config.baseCurrency] / state.currency.rates[priceCurrency]\r\n}\r\n\r\n// COLLECTIONS SELECTORS\r\n/**\r\n * Function to return the array of ingredient id's for the named collection\r\n * @function getCollection\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {array} an array of ingredient ids.\r\n */\r\nconst getCollection = (state, collection) => state.collections[collection]\r\n\r\n// INGREDIENT SELECTORS\r\nconst getIngredients = state => state.ingredients\r\n\r\nconst getIngredient = (state, id) => state.ingredients.find(ingredient => ingredient.id === id)\r\n\r\nconst getIngredientCollection = (state, id) => {\r\n    return Object.keys(state.collections).find(collection => state.collections[collection].includes(id))\r\n}\r\n\r\n/**\r\n * Function to return all ingredient objects in a collection.\r\n * @function getCollectionIngredients\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {array} an array of ingredient objects.\r\n */\r\nconst getCollectionIngredients = createCachedSelector(\r\n    [getIngredients, getCollection],\r\n    (ingredients, ids) => ingredients.filter(ingredient => ids.includes(ingredient.id))\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n// COSTING SELECTORS - MAIN APP FUNCTIONALITY\r\nconst totalQuantityCalculation = ingredients => ingredients.reduce((prev, curr) => {\r\n    return prev + curr.quantity\r\n}, 0)\r\n\r\n/**\r\n * Function to calculate the total mass/volume of each collection in base units.\r\n * @function getCollectionTotalQuantity\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} a total of all ingredient.quantity values in collection in base units.\r\n */\r\nconst getCollectionTotalQuantity = createCachedSelector(\r\n    getCollectionIngredients,\r\n    ingredients => totalQuantityCalculation(ingredients)\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n/**\r\n * Function to calculate the total mass/volume of the entire project.\r\n * @function getIngredientsTotalQuantity\r\n * @param {object} state - redux state object\r\n * @returns {number} a total of all ingredient.quantity values in project in base units.\r\n */\r\nconst getIngredientsTotalQuantity = createSelector(\r\n    getIngredients,\r\n    ingredients => totalQuantityCalculation(ingredients)\r\n)\r\n\r\n/**\r\n * Function to calculate the total mass/volume percent of each collection in relation to te project total.\r\n * @function getCollectionPercentOfTotal\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} a decimal percent between 0 and 1.\r\n */\r\nconst getCollectionPercentOfTotal = createCachedSelector(\r\n    [getCollectionTotalQuantity, getIngredientsTotalQuantity],\r\n    (collectionTotal, ingredientsTotal) => collectionTotal / ingredientsTotal\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n/**\r\n * Helper function to convert quantities between different units of mass or volume\r\n * @function unitConversion\r\n * @param {string} unit - unit to convert from e.g. 'kg' \r\n * @param {string} baseUnit - unit to convert to e.g. 'g'\r\n * @param {number} numberOfUnits - number of units to convert\r\n * @param {string} unitType - 'mass' or 'volume' conversion\r\n * @returns {number} \r\n */\r\nconst unitConversion = (unit, baseUnit, numberOfUnits, unitType) => {\r\n    if (unitType === 'mass') {\r\n        return mass(numberOfUnits).from(unit).to(baseUnit).value\r\n    } else {\r\n        return volume(numberOfUnits).from(unit).to(baseUnit).value\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function to convert prices to desired currency from another\r\n * @function rateConversion\r\n * @param {object} rates - key value pairs for currency code and exchange rate to USD \r\n * @param {string} baseCode - currency code to convert to\r\n * @param {string} priceCode - currency code to convert from\r\n * @param {number} price - ammount to be converted\r\n * @returns {number}\r\n */\r\nconst rateConversion = (rates, baseCode, priceCode, price) => {\r\n    return rates[baseCode] / rates[priceCode] * price\r\n}\r\n\r\n/**\r\n * Helper function to calculate the cost per unit of a list of ingredients\r\n * @function costCalculation\r\n * @param {array} ingredients - array of objects containing the ingredient details\r\n * @param {number} totalQuantity - the total quantity of the ingredients combined\r\n * @param {object} config - project configuration: unit types, base units and currency\r\n * @param {object} rates - currency exchange rates\r\n * @returns {number} - the cost per unit of the ingredient list provided\r\n */\r\nconst costCalculation = (ingredients, totalQuantity, config, rates) => {\r\n    return ingredients.reduce((prev, ingredient) => {\r\n        const costInBaseCurrency = rateConversion(rates, config.baseCurrency, ingredient.pricedInCurrency, ingredient.cost) \r\n        const costedQuantityInBaseUnits = unitConversion(ingredient.unit, config.baseUnit, ingredient.numberOfUnits, config.unitType)\r\n        const costPerBaseUnit = costInBaseCurrency / costedQuantityInBaseUnits\r\n        const ingredientPercentWeighting = ingredient.quantity / totalQuantity\r\n        return prev + (costPerBaseUnit * ingredientPercentWeighting)\r\n    }, 0)\r\n}\r\n\r\n/**\r\n * Function to calculate the cost per baseUnit in baseCurrency of the selected collection of ingredients \r\n * @function getCollectionCostPerBaseUnit\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} - the cost per baseUnit in baseCurrency\r\n */\r\nconst getCollectionCostPerBaseUnit = createCachedSelector(\r\n    [getCollectionIngredients, getCollectionTotalQuantity, getConfig, getRates],\r\n    (ingredients, totalQuantity, config, rates) => costCalculation(ingredients, totalQuantity, config, rates)\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n\r\n\r\nexport {\r\n    getRates,\r\n    getLoadingStatus,\r\n    getUnitDefinitions,\r\n    getBaseUnit,\r\n    getUnitType,\r\n    getBaseCurrency,\r\n    getBaseCurrencyExchangeRate,\r\n    getCollectionIngredients,  \r\n    getIngredients,\r\n    getIngredient,\r\n    getIngredientCollection,\r\n    getIngredientsTotalQuantity,\r\n    getCollectionTotalQuantity,\r\n    getCollectionPercentOfTotal,\r\n    getCollectionCostPerBaseUnit\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport codes from '../codes'\r\nimport { getRates } from '../redux/selectors'\r\n\r\nconst codeDescription = (code) => code in codes? codes[code] : code\r\n\r\nconst CurrencyDropdown = ({rates, id, label, value, onChange, className}) => {\r\n    \r\n    const currencyOptions = Object.keys(rates)\r\n            .map(code => <MenuItem key={code} value={code}>{`${codeDescription(code)} (${code})`}</MenuItem>)\r\n\r\n    const labelId = `${id}-label`\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                {currencyOptions}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    rates: getRates(state),\r\n})\r\n    \r\nexport default connect(mapStateToProps)(CurrencyDropdown)\r\n","import React, { useMemo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport { getUnitDefinitions } from '../redux/selectors'\r\n\r\nconst MeasureDropdown = ({ definitions, value, id, label, onChange, pluralUnitNames, className }) => {\r\n    \r\n    const measureOptions = useMemo(() => definitions.map((measure, index) => {\r\n            return(\r\n                <MenuItem key={index} value={measure.unit}>\r\n                {`${measure[pluralUnitNames ? 'plural' : 'singular']} (${measure.unit})`}\r\n                </MenuItem>\r\n            )\r\n        }),[definitions, pluralUnitNames]) \r\n\r\n    const labelId = `${id}-label`\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                {measureOptions}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    definitions: getUnitDefinitions(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(MeasureDropdown)\r\n","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst UnitTypeDropdown = ({ value, id, label, onChange, className }) => {\r\n    \r\n    const labelId = `${id}-label`\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                <MenuItem key={1} value='mass' >Mass</MenuItem>\r\n                <MenuItem key={2} value='volume' >Volume</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default UnitTypeDropdown\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\n\r\nimport CurrencyDropdown from './CurrencyDropdown'\r\nimport { getBaseCurrency, getBaseUnit, getUnitType } from '../redux/selectors'\r\nimport { changeBaseCurrency, changeUnitType, changeBaseUnits } from '../redux/config'\r\nimport MeasureDropdown from './MeasureDropdown'\r\nimport UnitTypeDropdown from './UnitTypeDropdown'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    buttonFloat: {\r\n        float: 'right'\r\n    },\r\n    drawerContainer: { \r\n        padding: theme.spacing(2) \r\n    },\r\n    dropdownContainer: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nconst ProjectOptions = (props) => {\r\n    const { baseCurrency, unitType, baseUnit, changeBaseCurrency, changeUnitType, changeBaseUnits, open, handleOptionsClose } = props\r\n    const classes = useStyles()\r\n    return (\r\n        <Drawer anchor='top' open={open} onClose={() => handleOptionsClose(false)}>\r\n            <div className={classes.drawerContainer}>\r\n                <Grid item container direction='row' spacing={3} alignItems='center'>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>Project Options:</Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                        <CurrencyDropdown\r\n                            id='baseCurrencySelect'\r\n                            label='base currency'\r\n                            value={baseCurrency}\r\n                            onChange={changeBaseCurrency}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                        <UnitTypeDropdown\r\n                            id='unitTypeSelect'\r\n                            label='unit types'\r\n                            value={unitType}\r\n                            onChange={changeUnitType}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                        <MeasureDropdown \r\n                            id='baseUnitSelect'\r\n                            label='base units'\r\n                            value={baseUnit}\r\n                            onChange={changeBaseUnits}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Tooltip title='Close options panel'>\r\n                    <IconButton onClick={() => handleOptionsClose(false)} className={classes.buttonFloat}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n        baseCurrency: getBaseCurrency(state),\r\n        unitType: getUnitType(state),\r\n        baseUnit: getBaseUnit(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeBaseCurrency, changeUnitType, changeBaseUnits })(ProjectOptions)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { getBaseUnit, getIngredients } from '../redux/selectors'\r\nimport { deleteIngredient } from '../redux/ingredient'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editButton: {\r\n        padding: 0,\r\n        marginLeft: 'auto'\r\n    },\r\n    deleteButton: {\r\n        float: 'right',\r\n        padding: 0,\r\n        marginLeft: '0.3em',\r\n    },\r\n    ingName: {\r\n        width: '150px',\r\n        wordWrap: true\r\n    },\r\n    ingQuant: {\r\n        \r\n    },\r\n    li: {\r\n        padding: theme.spacing(0.5)\r\n    },\r\n    list: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(1), \r\n        maxWidth: '400px'\r\n    },\r\n    topDivider: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst IngredientList = ({ ingredients, baseUnit, deleteIngredient, handleFormOpen }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid item xs={12} md={4} className={classes.list}>\r\n            <Divider className={classes.topDivider}/>        \r\n            <List>\r\n                {ingredients.map(ingredient => {\r\n                    return (\r\n                        <ListItem key={ingredient.id} className={classes.li} >\r\n                            <Typography variant='body1' className={classes.ingName}>{ingredient.ingredientName}</Typography>\r\n                            <Typography variant='body2' className={classes.ingQuant}>{`${ingredient.quantity}${baseUnit}`}</Typography>\r\n                            \r\n                            <Tooltip title='Edit ingredient'>\r\n                                <IconButton \r\n                                    className={classes.editButton}\r\n                                    onClick={() => handleFormOpen(ingredient.id)}\r\n                                >\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete ingredient'>\r\n                                <IconButton \r\n                                    className={classes.deleteButton}\r\n                                    onClick={() => deleteIngredient(ingredient.id)}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ingredients: getIngredients(state),\r\n    baseUnit: getBaseUnit(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {deleteIngredient})(IngredientList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\n\r\nimport { \r\n    getBaseCurrency, \r\n    getBaseUnit, \r\n    getIngredient, \r\n    getIngredientCollection \r\n} from '../redux/selectors'\r\nimport { createIngredient, editIngredient } from '../redux/ingredient'\r\nimport CurrencyDropdown from './CurrencyDropdown'\r\nimport MeasureDropdown from './MeasureDropdown'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    radioGroup: {\r\n        flexWrap: false,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n    radio: {\r\n        // marginRight: 'auto'\r\n\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='right' ref={ref} {...props} />;\r\n})\r\n\r\nconst IngredientForm = ({ id, open, ingredient, collection, baseCurrency, baseUnit, editIngredient, createIngredient, handleFormClose }) => {\r\n    const { register, handleSubmit, control, errors } = useForm()\r\n    const classes = useStyles()\r\n    \r\n    const onSubmit = (data) => {\r\n        if (id) {\r\n            editIngredient(id, data)\r\n            handleFormClose(false)\r\n        } else {\r\n            createIngredient(data)\r\n            handleFormClose(false)\r\n        }\r\n    }\r\n\r\n    const defaultValues = {\r\n        ingredientName: ingredient ? ingredient.ingredientName : '',\r\n        cost: ingredient ? ingredient.cost : '',\r\n        pricedInCurrency: ingredient ? ingredient.pricedInCurrency : baseCurrency,\r\n        numberOfUnits: ingredient ? ingredient.numberOfUnits : '',\r\n        unit: ingredient ? ingredient.unit : baseUnit,\r\n        quantity: ingredient ? ingredient.quantity : '',\r\n        collection: collection\r\n    }\r\n\r\n    const rules = {\r\n        ingredientName: {\r\n            required: {\r\n                value: true,\r\n                message: 'An ingredient name is required'\r\n            } \r\n        },\r\n        cost: {\r\n            required: {\r\n                value: true,\r\n                message: 'Cost is required'\r\n            },\r\n        },\r\n        numberOfUnits: {\r\n            required: {\r\n                value: true,\r\n                message: 'The number of units is required'\r\n            },\r\n            validate: value => value > 0 || 'A number greater than 0 is required'\r\n        },\r\n        quantity: {\r\n            required: {\r\n                value: true,\r\n                message: 'A quantity is required'\r\n            },\r\n            validate: value => value > 0 || 'A number greater than 0 is required'\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Dialog \r\n            open={open} \r\n            onClose={() => handleFormClose(false)}\r\n            TransitionComponent={Transition}\r\n            fullWidth\r\n        >\r\n            <DialogTitle>{`${ingredient ? 'Edit' : 'Create'} Ingredient:`}</DialogTitle>\r\n            <DialogContent >\r\n                <Grid container spacing={2}>            \r\n                    <Grid item>\r\n                        <Typography variant='h4'>{}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            error={!!errors.ingredientName}\r\n                            inputRef={register(rules.ingredientName)} \r\n                            name='ingredientName'\r\n                            label='Ingredient name' \r\n                            defaultValue={defaultValues.ingredientName}\r\n                            variant='outlined' \r\n                            size='small' \r\n                            fullWidth\r\n                            helperText={errors.ingredientName ? errors.ingredientName.message : null}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField \r\n                            error={!!errors.cost}\r\n                            inputRef={register(rules.cost)} \r\n                            name='cost'\r\n                            label='Cost' \r\n                            defaultValue={defaultValues.cost}\r\n                            type='number' \r\n                            variant='outlined' \r\n                            inputProps={{ min: '0', step: '0.01' }}\r\n                            size='small'\r\n                            fullWidth \r\n                            helperText={errors.cost ? errors.cost.message : null}\r\n                        />                \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Controller\r\n                            as={CurrencyDropdown}\r\n                            id='currency' \r\n                            name='pricedInCurrency' \r\n                            label='In currency' \r\n                            defaultValue={defaultValues.pricedInCurrency}\r\n                            className=''\r\n                            control={control}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            error={!!errors.numberOfUnits} \r\n                            inputRef={register(rules.numberOfUnits)} \r\n                            name='numberOfUnits' \r\n                            label='Per number'\r\n                            defaultValue={defaultValues.numberOfUnits}\r\n                            type='number' \r\n                            variant='outlined' \r\n                            inputProps={{ min: '0', step: '0.00001' }}\r\n                            size='small'\r\n                            fullWidth \r\n                            helperText={errors.numberOfUnits ? errors.numberOfUnits.message : null}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Controller\r\n                            as={MeasureDropdown}\r\n                            id='units' \r\n                            name='unit' \r\n                            label='of units' \r\n                            defaultValue={defaultValues.unit}\r\n                            className=''\r\n                            control={control}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField \r\n                            error={!!errors.quantity}\r\n                            inputRef={register(rules.quantity)} \r\n                            name='quantity'\r\n                            label='quantity' \r\n                            defaultValue={defaultValues.quantity}\r\n                            type='number' \r\n                            inputProps={{ \r\n                                min: '0',\r\n                                step: '0.00001'\r\n                            }}\r\n                            InputProps={{ endAdornment: <InputAdornment position=\"end\">{baseUnit}</InputAdornment> }}\r\n                            variant='outlined' \r\n                            size='small'\r\n                            fullWidth \r\n                            helperText={errors.quantity ? errors.quantity.message : null}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormLabel>Select Collection:</FormLabel>\r\n                        <Controller\r\n                            as={\r\n                                <RadioGroup row className={classes.radioGroup} >\r\n                                <FormControlLabel\r\n                                    className={classes.radio}\r\n                                    value='variable'\r\n                                    control={<Radio />}\r\n                                    label='variable'\r\n                                    labelPlacement='bottom'\r\n                                />\r\n                                <FormControlLabel\r\n                                    className={classes.radio}\r\n                                    value='balance'\r\n                                    control={<Radio />}\r\n                                    label='balance'\r\n                                    labelPlacement='bottom'\r\n                                />\r\n                                <FormControlLabel\r\n                                    className={classes.radio}\r\n                                    value='fixed'\r\n                                    control={<Radio />}\r\n                                    label='fixed'\r\n                                    labelPlacement='bottom'\r\n                                />\r\n                                </RadioGroup>\r\n                            }\r\n                            name='collection'\r\n                            control={control}\r\n                            defaultValue={defaultValues.collection}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleSubmit((data) => onSubmit(data))}\r\n                >\r\n                    {ingredient ? 'Save' : 'Create'}\r\n                </Button>\r\n                <Button \r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => handleFormClose(false)} \r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const ingredient =  ownProps.id ? getIngredient(state, ownProps.id) : null\r\n    const collection = ownProps.id ? getIngredientCollection(state, ownProps.id) : 'balance'\r\n    return ({\r\n        ingredient,\r\n        collection,\r\n        baseCurrency: getBaseCurrency(state),\r\n        baseUnit: getBaseUnit(state)\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { editIngredient, createIngredient })(IngredientForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { getBaseCurrency, getBaseUnit } from '../redux/selectors'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    iconButton: {\r\n        padding: 0,\r\n    }\r\n}))\r\n\r\n\r\nconst TopToolBar = props => {\r\n    const { baseUnit, baseCurrency, setOptionsVisible, handleFormOpen } = props\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid item container direction='row' alignItems='flex-start' alignContent='center' spacing={2}>\r\n            <Grid item>\r\n                <Typography variant='body1'>Currency: {baseCurrency}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body1'>Units: {baseUnit}</Typography>\r\n            </Grid>\r\n            <Grid item >\r\n                <Tooltip title='Project options'>\r\n                    <IconButton className={classes.iconButton} onClick={() => setOptionsVisible(true)} >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip title='Add new ingredient to project'>\r\n                    <IconButton className={classes.iconButton} onClick={() => handleFormOpen(null)}>\r\n                        <AddCircleOutlineIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid>          \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    baseUnit: getBaseUnit(state),\r\n    baseCurrency: getBaseCurrency(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(TopToolBar)\r\n","import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ProjectOptions from './ProjectOptions'\r\nimport IngredientList from './IngredientList'\r\nimport IngredientForm from './IngredientForm'\r\nimport TopToolBar from './TopToolBar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: theme.spacing(2) \r\n    },\r\n    graph: {\r\n        backgroundColor: 'gray'\r\n    }\r\n}))\r\n\r\nconst Calculator = props => {\r\n    const [optionsVisible, setOptionsVisible] = useState(false)\r\n    const [formVisible, setFormVisible] = useState(false)\r\n    const [selectedIngredientId, setSelectedIngredientId] = useState(null)\r\n\r\n    const handleFormOpen = (id) => {\r\n        setSelectedIngredientId(id)\r\n        setFormVisible(true)\r\n    }\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <ProjectOptions open={optionsVisible} handleOptionsClose={setOptionsVisible} />\r\n            <IngredientForm open={formVisible}  id={selectedIngredientId} handleFormClose={setFormVisible} />\r\n            <Grid container direction='column' className={classes.container}>\r\n                <TopToolBar setOptionsVisible={setOptionsVisible} handleFormOpen={handleFormOpen} />\r\n                <Grid item container spacing={2}>\r\n                    <IngredientList handleFormOpen={handleFormOpen} />\r\n                    <Grid item xs={12} md={8} className={classes.graph}>\r\n                        graph\r\n                    </Grid>\r\n                    <Grid item>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n    // needs to display a graph\r\n    // needs to show some controls for the model\r\n    \r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { createBrowserHistory } from 'history'\r\nexport default createBrowserHistory()","import React, { useEffect } from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Footer from './Footer'\r\nimport AppHeader from './AppHeader'\r\nimport HowTo from './HowTo'\r\nimport Calculator from './Calculator'\r\nimport About from './About'\r\nimport { fetchCurrencies } from '../redux/currency'\r\nimport history from '../history'\r\n\r\nconst App = ({ fetchCurrencies }) => {\r\n\r\n    useEffect(() => {\r\n        fetchCurrencies()\r\n    }, [fetchCurrencies])\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <Grid container direction='column' >\r\n                <AppHeader />\r\n                <Grid item>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Calculator} />\r\n                        <Route path=\"/howto\" component={HowTo} />\r\n                        <Route path=\"/about\" component={About} />\r\n                    </Switch>\r\n                </Grid>\r\n                <Footer />\r\n            </Grid>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default connect(null, { fetchCurrencies })(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport App from './components/App'\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <CssBaseline />\r\n        <App />\r\n    </Root>, \r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}