{"version":3,"sources":["codes.js","redux/currency/index.js","redux/types.js","redux/config/index.js","redux/error/index.js","redux/collections/index.js","redux/ingredient/index.js","redux/rootReducer.js","redux/mockState.js","Root.js","components/Footer.js","components/AppHeader.js","components/HowTo.js","redux/selectors.js","components/CurrencyDropdown.js","components/MeasureDropdown.js","components/UnitTypeDropdown.js","components/ProjectOptions.js","components/IngredientList.js","components/Calculator.js","components/About.js","history.js","components/App.js","index.js"],"names":["AED","ARS","AUD","BGN","BRL","BSD","CAD","CHF","CLP","CNY","COP","CZK","DKK","DOP","EGP","EUR","FJD","GBP","GTQ","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","KZT","MVR","MXN","MYR","NOK","NZD","PAB","PEN","PHP","PKR","PLN","PYG","RON","RUB","SAR","SEK","SGD","THB","TRY","TWD","UAH","USD","UYU","ZAR","INITIAL_RATES","Object","fromEntries","keys","codes","map","code","loadRatesError","error","type","payload","rates","isLoading","currencyReducer","combineReducers","currency","action","configReducer","unitType","state","baseUnit","baseCurrency","getUnitType","getUnitDefinitions","createSelector","volume","list","mass","errorsReducer","collectionAssign","collectionName","collection","ids","filter","id","includes","createCollectionReducer","collectionsReducer","variable","fixed","balance","mapIngredientProps","ingredientName","data","pricedInCurrency","cost","parseFloat","numberOfUnits","unit","quantity","editing","ingredientReducer","ingredient","config","errors","collections","ingredients","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","children","initialState","mockState","store","createStore","rootReducer","applyMiddleware","thunk","useStyles","makeStyles","theme","footer","position","top","bottom","homeButton","marginRight","spacing","link","flexGrow","Footer","props","classes","AppBar","className","color","Toolbar","variant","Link","href","target","rel","Tooltip","title","IconButton","onClick","scrollTo","root","menuButton","breakpoints","down","menuItems","menuTitle","pageURL","tabNameToIndex","0","1","2","indexToTabName","withRouter","location","history","path","pathname","useState","anchorEl","setAnchorEl","selectedTab","setSelectedTab","useTheme","open","Boolean","isMobile","useMediaQuery","Typography","edge","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","menuItem","MenuItem","push","handleMenuClick","key","Tabs","value","onChange","newValue","Tab","label","HowTo","fromConfig","getBaseCurrency","getBaseUnit","getRates","fromCurrency","getIngredients","getCollectionIngredients","createCachedSelector","totalQuantityCalculation","reduce","prev","curr","getCollectionTotalQuantity","getIngredientsTotalQuantity","costCalculation","collectionTotal","ingredientsTotal","totalQuantity","baseCode","priceCode","price","rateConversion","from","to","connect","currencyOptions","useMemo","codeDescription","labelId","FormControl","size","fullWidth","InputLabel","Select","definitions","pluralUnitNames","measureOptions","measure","index","UnitTypeDropdown","dropdownContainer","changeBaseCurrency","changeUnitType","changeBaseUnits","Grid","item","container","direction","alignItems","xs","md","editButton","padding","marginLeft","deleteButton","float","ingName","width","wordWrap","ingQuant","li","renderedIngredientsList","ListItem","List","drawerContainer","iconButton","graph","backgroundColor","maxWidth","topDivider","marginTop","visible","setVisible","Drawer","anchor","style","alignContent","Divider","About","createBrowserHistory","fetchCurrencies","dispatch","a","axios","get","response","result","message","useEffect","exact","component","Calculator","ReactDOM","render","Root","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.80c849a6.chunk.js","sourcesContent":["export default {\r\n    AED:\t\"UAE Dirham\",\r\n    ARS:\t\"Argentine Peso\",\r\n    AUD:\t\"Australian Dollar\",   \r\n    BGN:\t\"Bulgarian Lev\",\r\n    BRL:\t\"Brazilian Real\",\r\n    BSD:\t\"Bahamian Dollar\",\r\n    CAD:\t\"Canadian Dollar\",\r\n    CHF:\t\"Swiss Franc\",\r\n    CLP:\t\"Chilean Peso\",\r\n    CNY:\t\"Chinese Renminbi\",\r\n    COP:\t\"Colombian Peso\",\r\n    CZK:\t\"Czech Koruna\",\r\n    DKK:\t\"Danish Krone\",\r\n    DOP:\t\"Dominican Peso\",\r\n    EGP:\t\"Egyptian Pound\",\r\n    EUR:\t\"Euro\",\r\n    FJD:\t\"Fiji Dollar\",\r\n    GBP:\t\"Pound Sterling\",\r\n    GTQ:\t\"Guatemalan Quetzal\",\r\n    HKD:\t\"Hong Kong Dollar\",\r\n    HRK:\t\"Croatian Kuna\",\r\n    HUF:\t\"Hungarian Forint\",\r\n    IDR:\t\"Indonesian Rupiah\",\r\n    ILS:\t\"Israeli New Shekel\",\r\n    INR:\t\"Indian Rupee\",\r\n    ISK:\t\"Icelandic Krona\",\r\n    JPY:\t\"Japanese Yen\",\r\n    KRW:\t\"South Korean Won\",\r\n    KZT:\t\"Kazakhstani Tenge\",\r\n    MVR:\t\"Maldivian Rufiyaa\",\r\n    MXN:\t\"Mexican Peso\",\r\n    MYR:\t\"Malaysian Ringgit\",\r\n    NOK:\t\"Norwegian Krone\",\r\n    NZD:\t\"New Zealand Dollar\",\r\n    PAB:\t\"Panamanian Balboa\",\r\n    PEN:\t\"Peruvian Sol\",\r\n    PHP:\t\"Philippine Peso\",\r\n    PKR:\t\"Pakistani Rupee\",\r\n    PLN:\t\"Polish Zloty\",\r\n    PYG:\t\"Paraguayan Guarani\",\r\n    RON:\t\"Romanian Leu\",\r\n    RUB:\t\"Russian Ruble\",\r\n    SAR:\t\"Saudi Riyal\",\r\n    SEK:\t\"Swedish Krona\",\r\n    SGD:\t\"Singapore Dollar\",\r\n    THB:\t\"Thai Baht\",\r\n    TRY:\t\"Turkish Lira\",\r\n    TWD:\t\"New Taiwan Dollar\",\r\n    UAH:\t\"Ukrainian Hryvnia\",\r\n    USD:\t\"United States Dollar\",\r\n    UYU:\t\"Uruguayan Peso\",\r\n    ZAR:\t\"South African Rand\"\r\n}\r\n\r\n\r\n","import { \r\n    FETCH_CURRENCIES_REQUEST,\r\n    FETCH_CURRENCIES_SUCCESS,\r\n    FETCH_CURRENCIES_ERROR \r\n} from '../types'\r\nimport { combineReducers } from 'redux'\r\nimport axios from 'axios'\r\nimport codes from '../../codes'\r\n\r\n// CONSTANTS\r\n\r\nconst INITIAL_RATES = Object.fromEntries(Object.keys(codes).map((code) => [code, 1])) // default all exchange rates to 1 if not replaced by API data\r\n\r\n// ACTIONS\r\n\r\nconst loadRatesRequest = () => ({\r\n    type: FETCH_CURRENCIES_REQUEST,\r\n        payload: {\r\n            isLoading: true\r\n        }\r\n})\r\n   \r\nconst loadRatesSuccess = (rates) => ({\r\n    type: FETCH_CURRENCIES_SUCCESS,\r\n    payload:{\r\n        rates: rates,\r\n        isLoading: false,\r\n        error: null\r\n    }\r\n})\r\n\r\nconst loadRatesError = (error) => ({\r\n    type: FETCH_CURRENCIES_ERROR,\r\n    payload:{\r\n        rates: INITIAL_RATES,\r\n        isLoading: false,\r\n        error: error\r\n    }\r\n})\r\n\r\nexport const fetchCurrencies = () => {\r\n    return async function(dispatch) {\r\n        dispatch(loadRatesRequest())\r\n        try{\r\n            let response = (await axios.get('https://open.exchangerate-api.com/v6/latest')).data\r\n            if(response.result === \"success\"){\r\n                dispatch(loadRatesSuccess(response.rates))\r\n            }else{\r\n                dispatch(loadRatesError(response[\"error-type\"]))\r\n        }\r\n        }catch(error){\r\n            dispatch(loadRatesError(error.message))\r\n        }\r\n    }\r\n}\r\n\r\n// REDUCERS\r\n\r\nconst ratesReducer = (currency = INITIAL_RATES, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n        case FETCH_CURRENCIES_ERROR:\r\n            return action.payload.rates\r\n        default:\r\n            return currency\r\n    }\r\n}\r\n\r\nconst loadingReducer = (isLoading = true, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n        case FETCH_CURRENCIES_ERROR:\r\n        case FETCH_CURRENCIES_REQUEST:\r\n            return action.payload.isLoading\r\n        default:\r\n            return isLoading\r\n    }\r\n}\r\n\r\nconst currencyReducer = combineReducers({\r\n    rates: ratesReducer,\r\n    isLoading: loadingReducer,\r\n})\r\n\r\nexport default currencyReducer\r\n\r\n// SELECTORS\r\n\r\nexport const getRates = state => state.rates\r\nexport const getLoadingStatus = state => state.isLoading\r\n\r\n\r\n","// currency related\r\nexport const FETCH_CURRENCIES_REQUEST = 'FETCH_CURRENCIES_REQUEST'\r\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS'\r\nexport const FETCH_CURRENCIES_ERROR = 'FETCH_CURRENCIES_ERROR'\r\n\r\n// config related\r\nexport const UNIT_TYPES_SELECTED = 'UNIT_TYPES_SELECTED'\r\nexport const BASE_UNITS_SELECTED = 'BASE_UNITS_SELECTED'\r\nexport const BASE_CURRENCY_SELECTED = 'BASE_CURRENCY_SELECTED'\r\n\r\n// ingredient related\r\nexport const CREATE_INGREDIENT = 'CREATE_INGREDIENT'\r\nexport const EDIT_INGREDIENT = 'EDIT_INGREDIENT'\r\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT'\r\nexport const ASSIGN_INGREDIENT = 'ASSIGN_INGREDIENT'\r\nexport const OPEN_INGREDIENT = 'OPEN_INGREDIENT'\r\nexport const CLOSE_INGREDIENT = 'CLOSE_INGREDIENT'\r\n\r\n// group related\r\nexport const CLEAR_GROUP = 'CLEAR_GROUP'\r\nexport const SIZE_GROUP = 'SIZE_GROUP'\r\n\r\n// total quantity related\r\nexport const TOTAL_QUANTITY_CHANGE = 'TOTAL_QUANTITY_CHANGE'\r\nexport const TOTAL_QUANTITY_UNITS_CHANGE = 'TOTAL_QUANTITY_UNITS_CHANGE'\r\n","import { \r\n    UNIT_TYPES_SELECTED,\r\n    BASE_UNITS_SELECTED,\r\n    BASE_CURRENCY_SELECTED \r\n} from '../types'\r\nimport { combineReducers } from 'redux'\r\nimport { createSelector } from 'reselect'\r\nimport { mass, volume } from 'units-converter'\r\n\r\n// ACTIONS\r\n\r\nexport const changeUnitType = (type) => ({\r\n    type: UNIT_TYPES_SELECTED,\r\n    payload: type\r\n})\r\n\r\nexport const changeBaseUnits = (unit) => ({\r\n    type: BASE_UNITS_SELECTED,\r\n    payload: unit\r\n})\r\n\r\nexport const changeBaseCurrency = (code) => ({\r\n    type: BASE_CURRENCY_SELECTED,\r\n    payload: code\r\n})\r\n\r\n// REDUCERS\r\n\r\nconst unitTypeReducer = (state = 'mass', action) => {\r\n    switch (action.type) {\r\n        case UNIT_TYPES_SELECTED:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst baseUnitsReducer = (state = 'g', action) => {\r\n    switch (action.type) {\r\n        case BASE_UNITS_SELECTED:\r\n            return action.payload\r\n        case UNIT_TYPES_SELECTED:\r\n            return action.payload === 'mass' ? 'g' : 'ml'\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst baseCurrencyReducer = (state = 'USD', action) => {\r\n    switch (action.type) {\r\n        case BASE_CURRENCY_SELECTED:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst configReducer = combineReducers({\r\n    unitType: unitTypeReducer,\r\n    baseUnit: baseUnitsReducer,\r\n    baseCurrency: baseCurrencyReducer\r\n})\r\n\r\nexport default configReducer\r\n\r\n// SELECTORS\r\n\r\nexport const getBaseCurrency = state => state.baseCurrency\r\n\r\nexport const getBaseUnit = state => state.baseUnit\r\n\r\nexport const getUnitType = state => state.unitType\r\n\r\n/**\r\n * Function to retrun the appropriate unitTypes definitions object based on the value of config.unitType piece of state.\r\n * @function getUnitDefinitions\r\n * @param {object} state - redux state object.\r\n * @returns {object} - Unit type definitions object.\r\n */\r\nexport const getUnitDefinitions = createSelector(\r\n    getUnitType,\r\n    (unitType) => {\r\n        switch (unitType) {\r\n            case 'volume':\r\n                return volume().list()\r\n            case 'mass':\r\n            default:\r\n                return mass().list() \r\n        }\r\n    }\r\n)","import { FETCH_CURRENCIES_ERROR, FETCH_CURRENCIES_SUCCESS } from \"../types\"\r\n\r\n// REDUCERS\r\n\r\nconst INITIAL_ERROR = null\r\n   \r\nconst errorsReducer = (state = INITIAL_ERROR, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CURRENCIES_ERROR:\r\n            return action.payload.error\r\n        case FETCH_CURRENCIES_SUCCESS:\r\n            return null\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport default errorsReducer","import {\r\n    CREATE_INGREDIENT,\r\n    DELETE_INGREDIENT,\r\n    ASSIGN_INGREDIENT\r\n} from '../types'\r\nimport {combineReducers} from 'redux'\r\n\r\n// ACTIONS\r\n\r\nexport const assignIngredient = (collection, ids) => {\r\n    const idsArray = [].concat(ids) // allows passing of a single value or array\r\n    return {\r\n        type: ASSIGN_INGREDIENT,\r\n        payload: {\r\n            ids: idsArray,\r\n            collection: collection\r\n        }\r\n    }\r\n}\r\n    \r\n\r\n// REDUCERS\r\n\r\nconst collectionAssign = (state, collectionName, action) => {\r\n    // if this is the collection they are being assigned to only add the ids not already present\r\n    if (action.payload.collection === collectionName) {\r\n        return [...state, ...action.payload.ids.filter(id => !state.includes(id))]\r\n    // if this is not the collection they are being assigned to remove those ids that are present in the payload\r\n    } else if (action.payload.collection !== collectionName) {\r\n        return state.filter(id => !action.payload.ids.includes(id))\r\n    } else {\r\n        return state\r\n    }\r\n} \r\n\r\nconst createCollectionReducer = collectionName => (state = [], action) => {\r\n    switch (action.type) {\r\n        case ASSIGN_INGREDIENT:\r\n            return collectionAssign(state, collectionName, action)\r\n        case CREATE_INGREDIENT:\r\n            return action.payload.collection === collectionName ? [...state, action.payload.id] : state\r\n        case DELETE_INGREDIENT:\r\n            return state.filter(id => !action.payload.includes(id))\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst collectionsReducer = combineReducers({\r\n    // this is what we are modelling the changes to\r\n    variable: createCollectionReducer('variable'),\r\n    // this portion's fraction does not change - no matter what else we mess with ingredients in here are fixed quantity\r\n    fixed: createCollectionReducer('fixed'),\r\n    // this portion grows and shrinks to accomodate the changes in the variable quantity\r\n    balance: createCollectionReducer('balance'),\r\n})\r\n\r\nexport default collectionsReducer\r\n","import {\r\n    v4 as uuidv4\r\n} from 'uuid'\r\nimport {\r\n    CREATE_INGREDIENT,\r\n    EDIT_INGREDIENT,\r\n    DELETE_INGREDIENT,\r\n    OPEN_INGREDIENT,\r\n    CLOSE_INGREDIENT,\r\n} from '../types'\r\n\r\n\r\n// ACTIONS\r\n\r\nexport const createIngredient = (collection, data) => ({\r\n    type: CREATE_INGREDIENT,\r\n    payload: {\r\n        id: uuidv4(),\r\n        collection: collection,\r\n        data: data\r\n    }\r\n})\r\n\r\nexport const openIngredient = (id) => ({\r\n    type: OPEN_INGREDIENT,\r\n    payload: id\r\n})\r\n\r\nexport const closeIngredient = (id) => ({\r\n    type: CLOSE_INGREDIENT,\r\n    payload: id\r\n})\r\n\r\nexport const editIngredient = (id, data) => ({\r\n    type: EDIT_INGREDIENT,\r\n    payload: {\r\n        id: id,\r\n        data: data\r\n    }\r\n})\r\n\r\nexport const deleteIngredient = (ids) => {\r\n    const idsArray = [].concat(ids)    \r\n    return {\r\n        type: DELETE_INGREDIENT,\r\n        payload: idsArray\r\n    }\r\n}\r\n\r\n// REDUCERS\r\n\r\nconst mapIngredientProps = (action) => ({\r\n    id: action.payload.id,\r\n    ingredientName: action.payload.data.ingredientName,\r\n    pricedInCurrency: action.payload.data.pricedInCurrency,\r\n    cost: parseFloat(action.payload.data.cost),\r\n    numberOfUnits: parseFloat(action.payload.data.numberOfUnits),\r\n    unit: action.payload.data.unit,\r\n    quantity: parseFloat(action.payload.data.quantity),\r\n    editing: false\r\n})\r\n\r\nconst ingredientReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CREATE_INGREDIENT:\r\n            return [...state, mapIngredientProps(action)]\r\n        case OPEN_INGREDIENT:\r\n            return state.map(ingredient => {\r\n                if (ingredient.id === action.payload.id) {\r\n                    return {\r\n                        ...ingredient,\r\n                        editing: true\r\n                    }\r\n                }\r\n                return {\r\n                    ...ingredient,\r\n                    editing: false\r\n                }\r\n            })\r\n        case CLOSE_INGREDIENT:\r\n            return state.map(ingredient => {\r\n                if (ingredient.id === action.payload.id) {\r\n                    return {\r\n                        ...ingredient,\r\n                        editing: false\r\n                    }\r\n                }\r\n                return ingredient\r\n            })\r\n        case EDIT_INGREDIENT:\r\n            return [...state, mapIngredientProps(action)]\r\n        case DELETE_INGREDIENT:\r\n            return state.filter(ingredient => !action.payload.includes(ingredient.id))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ingredientReducer\r\n\r\n\r\n","import { combineReducers } from 'redux'\r\nimport currencyReducer from './currency'\r\nimport configReducer from './config'\r\nimport errorsReducer from './error'\r\nimport collectionsReducer from './collections'\r\nimport ingredientReducer from './ingredient'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    currency: currencyReducer,\r\n    config: configReducer,\r\n    errors: errorsReducer,\r\n    collections: collectionsReducer,\r\n    ingredients: ingredientReducer\r\n})\r\n\r\n","export default {\r\n    currency: {\r\n        rates: {\r\n            USD: 1,\r\n            AED: 3.67,\r\n            ARS: 73.51,\r\n            AUD: 1.4,\r\n            BGN: 1.66,\r\n            BRL: 5.59,\r\n            BSD: 1,\r\n            CAD: 1.32,\r\n            CHF: 0.912,\r\n            CLP: 786.07,\r\n            CNY: 6.92,\r\n            COP: 3742.1,\r\n            CZK: 22.1,\r\n            DKK: 6.31,\r\n            DOP: 57.91,\r\n            EGP: 15.9,\r\n            EUR: 0.848,\r\n            FJD: 2.13,\r\n            GBP: 0.762,\r\n            GTQ: 7.69,\r\n            HKD: 7.75,\r\n            HRK: 6.39,\r\n            HUF: 296.97,\r\n            IDR: 14912.39,\r\n            ILS: 3.4,\r\n            INR: 74.94,\r\n            ISK: 137.67,\r\n            JPY: 105.77,\r\n            KRW: 1191.2,\r\n            KZT: 418,\r\n            MVR: 15.4,\r\n            MXN: 22.08,\r\n            MYR: 4.18,\r\n            NOK: 8.99,\r\n            NZD: 1.53,\r\n            PAB: 1,\r\n            PEN: 3.58,\r\n            PHP: 48.69,\r\n            PKR: 167.91,\r\n            PLN: 3.72,\r\n            PYG: 7144,\r\n            RON: 4.1,\r\n            RUB: 74.41,\r\n            SAR: 3.75,\r\n            SEK: 8.79,\r\n            SGD: 1.37,\r\n            THB: 31.54,\r\n            TRY: 7.3,\r\n            TWD: 29.4,\r\n            UAH: 27.32,\r\n            UYU: 43.13,\r\n            ZAR: 17.23\r\n        },\r\n        isLoading: false\r\n    },\r\n    errors: null,\r\n    config: {\r\n        unitType: 'mass',\r\n        baseCurrency: 'CAD',\r\n        baseUnit: 'g',\r\n    },\r\n    collections: {\r\n        variable: ['945-6647-9977'],\r\n        fixed: ['154-6876-8443', '249-8388-8355', '033-0058-1111'],\r\n        balance: ['158-2987-3546', '249-3888-8999'],\r\n    },\r\n    ingredients: [{\r\n        id: '033-0058-1111',\r\n        ingredientName: 'Water',\r\n        pricedInCurrency: 'GBP',\r\n        cost: 1,\r\n        numberOfUnits: 10,\r\n        unit: 'kg',\r\n        quantity: 400,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '154-6876-8443',\r\n        ingredientName: 'Coconut Oil',\r\n        pricedInCurrency: 'EUR',\r\n        cost: 10,\r\n        numberOfUnits: 15,\r\n        unit: 'kg',\r\n        quantity: 100,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '158-2987-3546',\r\n        ingredientName: 'Silicone',\r\n        pricedInCurrency: 'USD',\r\n        cost: 106,\r\n        numberOfUnits: 150,\r\n        unit: 'kg',\r\n        quantity: 24,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '249-3888-8999',\r\n        ingredientName: 'Pigment A',\r\n        pricedInCurrency: 'GBP',\r\n        cost: 100,\r\n        numberOfUnits: 134,\r\n        unit: 'g',\r\n        quantity: 0.023,\r\n        editing: false\r\n    },{\r\n        id: '249-8388-8355',\r\n        ingredientName: 'Bulking Agent 23',\r\n        pricedInCurrency: 'USD',\r\n        cost: 10,\r\n        numberOfUnits: 75,\r\n        unit: 'kg',\r\n        quantity: 240,\r\n        editing: false\r\n    },\r\n    {\r\n        id: '945-6647-9977',\r\n        ingredientName: 'Active Ingredient',\r\n        pricedInCurrency: 'CAD',\r\n        cost: 1000,\r\n        numberOfUnits: 150,\r\n        unit: 'g',\r\n        quantity: 0.3,\r\n        editing: true\r\n    }]\r\n}","import React from 'react'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/rootReducer'\r\nimport mockState from './redux/mockState'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default ({ children, initialState=mockState }) => {\r\n    return (\r\n        <Provider store={createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)))}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Link from '@material-ui/core/Link'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        position: 'fixed',\r\n        top: 'auto',\r\n        bottom: 0\r\n    },\r\n    homeButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    link: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nconst Footer = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <AppBar className={classes.footer} color='secondary' >\r\n            <Toolbar variant='dense'>\r\n                <Link\r\n                    className={classes.link} \r\n                    href='https://www.exchangerate-api.com' \r\n                    target='_blank' \r\n                    rel='noopener noreferrer'\r\n                    color='inherit'\r\n                >\r\n                    Currency Conversion by ExchangeRate-API.com\r\n                </Link>\r\n                <Tooltip title='back to top'>\r\n                    <IconButton className={classes.homeButton} onClick={() => window.scrollTo(0, 0)}>\r\n                        <ArrowUpwardIcon color='inherit' />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexGrow: 1\r\n        },\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nconst menuItems = [\r\n    { menuTitle: 'Calculator', pageURL: '/' },\r\n    { menuTitle: 'How To', pageURL: '/howto' },\r\n    { menuTitle: 'About', pageURL: '/about' }\r\n]\r\n\r\nconst tabNameToIndex = { 0: '/', 1: '/howto', 2: '/about' }\r\nconst indexToTabName = { '/': 0, '/howto': 1, '/about': 2 }\r\n\r\nconst AppHeader = props => {\r\n    const { location, history } = props\r\n    const path = location.pathname\r\n    \r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[path])\r\n    \r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const open = Boolean(anchorEl)\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n    \r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    \r\n    const handleMenuClick = pageURL => {\r\n        history.push(pageURL)\r\n        setAnchorEl(null)\r\n    }\r\n        \r\n    const handleTabChange = (event, newValue) => {\r\n        history.push(tabNameToIndex[newValue])\r\n        setSelectedTab(newValue)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          <AppBar position='static'>\r\n            <Toolbar>\r\n              <Typography variant='h5' className={classes.title}>\r\n                Ingredient Cost Modeller\r\n              </Typography>\r\n              {isMobile ? (\r\n                <>\r\n                  <IconButton\r\n                    edge='start'\r\n                    className={classes.menuButton}\r\n                    color='inherit'\r\n                    onClick={handleMenu}\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Menu\r\n                    id='menu-appbar'\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right'\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right'\r\n                    }}\r\n                    open={open}\r\n                    onClose={() => setAnchorEl(null)}\r\n                  >\r\n                    {menuItems.map(menuItem => {\r\n                      const { menuTitle, pageURL } = menuItem\r\n                      return (\r\n                        <MenuItem onClick={() => handleMenuClick(pageURL)} key={menuTitle}>\r\n                          {menuTitle}\r\n                        </MenuItem>\r\n                      )\r\n                    })}\r\n                  </Menu>\r\n                </>\r\n              ) : (\r\n                <>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange} >\r\n                        {menuItems.map(menuItem => <Tab label={menuItem.menuTitle} key={menuItem.menuTitle}/>)}\r\n                    </Tabs>\r\n                </>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AppHeader)\r\n","import React from 'react'\r\n\r\nconst HowTo = () => {\r\n    return (\r\n        <div>\r\n           How to use the calulator \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowTo\r\n","// SELECTORS\r\nimport { createSelector } from 'reselect'\r\nimport {createCachedSelector} from 're-reselect'\r\nimport { mass, volume } from 'units-converter'\r\n\r\nimport * as fromCurrency from './currency'\r\nimport * as fromConfig from './config'\r\n\r\n// Selectors that need to know about the state slice shape are defined in the same file as the associated reducer and imported here.\r\n\r\n// CONFIG RELATED SELECTORS\r\n// memoized selector that maps the unit definitions for the MeasureDropdown component\r\nconst getUnitDefinitions = state => fromConfig.getUnitDefinitions(state.config)\r\nconst getBaseCurrency = state => fromConfig.getBaseCurrency(state.config)\r\nconst getBaseUnit = state => fromConfig.getBaseUnit(state.config)\r\nconst getUnitType = state => fromConfig.getUnitType(state.config)\r\nconst getConfig = state => state.config\r\n\r\n\r\n// CURRENCY AND CURRENCY CONVERSION SELECTORS\r\nconst getRates = state => fromCurrency.getRates(state.currency)\r\nconst getLoadingStatus = state => fromCurrency.getLoadingStatus(state.currency)\r\n\r\n/**\r\n * Function for converting between a price currency and the base currency.\r\n * @function getBaseCurrencyExchangeRate\r\n * @param {object} state - redux state object\r\n * @param {string} priceCurrency - the three letter currency code of the currency being converted to base currency.\r\n * @returns {number} an exchange rate between the two currencies\r\n */\r\nconst getBaseCurrencyExchangeRate = (state, priceCurrency) => {\r\n        return state.currency.rates[state.config.baseCurrency] / state.currency.rates[priceCurrency]\r\n}\r\n\r\n// COLLECTIONS SELECTORS\r\n/**\r\n * Function to return the array of ingredient id's for the named collection\r\n * @function getCollection\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {array} an array of ingredient ids.\r\n */\r\nconst getCollection = (state, collection) => state.collections[collection]\r\n\r\n// INGREDIENT SELECTORS\r\nconst getIngredients = state => state.ingredients\r\n\r\n/**\r\n * Function to return all ingredient objects in a collection.\r\n * @function getCollectionIngredients\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {array} an array of ingredient objects.\r\n */\r\nconst getCollectionIngredients = createCachedSelector(\r\n    [getIngredients, getCollection],\r\n    (ingredients, ids) => ingredients.filter(ingredient => ids.includes(ingredient.id))\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n// COSTING SELECTORS - MAIN APP FUNCTIONALITY\r\nconst totalQuantityCalculation = ingredients => ingredients.reduce((prev, curr) => {\r\n    return prev + curr.quantity\r\n}, 0)\r\n\r\n/**\r\n * Function to calculate the total mass/volume of each collection in base units.\r\n * @function getCollectionTotalQuantity\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} a total of all ingredient.quantity values in collection in base units.\r\n */\r\nconst getCollectionTotalQuantity = createCachedSelector(\r\n    getCollectionIngredients,\r\n    ingredients => totalQuantityCalculation(ingredients)\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n/**\r\n * Function to calculate the total mass/volume of the entire project.\r\n * @function getIngredientsTotalQuantity\r\n * @param {object} state - redux state object\r\n * @returns {number} a total of all ingredient.quantity values in project in base units.\r\n */\r\nconst getIngredientsTotalQuantity = createSelector(\r\n    getIngredients,\r\n    ingredients => totalQuantityCalculation(ingredients)\r\n)\r\n\r\n/**\r\n * Function to calculate the total mass/volume percent of each collection in relation to te project total.\r\n * @function getCollectionPercentOfTotal\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} a decimal percent between 0 and 1.\r\n */\r\nconst getCollectionPercentOfTotal = createCachedSelector(\r\n    [getCollectionTotalQuantity, getIngredientsTotalQuantity],\r\n    (collectionTotal, ingredientsTotal) => collectionTotal / ingredientsTotal\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n/**\r\n * Helper function to convert quantities between different units of mass or volume\r\n * @function unitConversion\r\n * @param {string} unit - unit to convert from e.g. 'kg' \r\n * @param {string} baseUnit - unit to convert to e.g. 'g'\r\n * @param {number} numberOfUnits - number of units to convert\r\n * @param {string} unitType - 'mass' or 'volume' conversion\r\n * @returns {number} \r\n */\r\nconst unitConversion = (unit, baseUnit, numberOfUnits, unitType) => {\r\n    if (unitType === 'mass') {\r\n        return mass(numberOfUnits).from(unit).to(baseUnit).value\r\n    } else {\r\n        return volume(numberOfUnits).from(unit).to(baseUnit).value\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function to convert prices to desired currency from another\r\n * @function rateConversion\r\n * @param {object} rates - key value pairs for currency code and exchange rate to USD \r\n * @param {string} baseCode - currency code to convert to\r\n * @param {string} priceCode - currency code to convert from\r\n * @param {number} price - ammount to be converted\r\n * @returns {number}\r\n */\r\nconst rateConversion = (rates, baseCode, priceCode, price) => {\r\n    return rates[baseCode] / rates[priceCode] * price\r\n}\r\n\r\n/**\r\n * Helper function to calculate the cost per unit of a list of ingredients\r\n * @function costCalculation\r\n * @param {array} ingredients - array of objects containing the ingredient details\r\n * @param {number} totalQuantity - the total quantity of the ingredients combined\r\n * @param {object} config - project configuration: unit types, base units and currency\r\n * @param {object} rates - currency exchange rates\r\n * @returns {number} - the cost per unit of the ingredient list provided\r\n */\r\nconst costCalculation = (ingredients, totalQuantity, config, rates) => {\r\n    return ingredients.reduce((prev, ingredient) => {\r\n        const costInBaseCurrency = rateConversion(rates, config.baseCurrency, ingredient.pricedInCurrency, ingredient.cost) \r\n        const costedQuantityInBaseUnits = unitConversion(ingredient.unit, config.baseUnit, ingredient.numberOfUnits, config.unitType)\r\n        const costPerBaseUnit = costInBaseCurrency / costedQuantityInBaseUnits\r\n        const ingredientPercentWeighting = ingredient.quantity / totalQuantity\r\n        return prev + (costPerBaseUnit * ingredientPercentWeighting)\r\n    }, 0)\r\n}\r\n\r\n/**\r\n * Function to calculate the cost per baseUnit in baseCurrency of the selected collection of ingredients \r\n * @function getCollectionCostPerBaseUnit\r\n * @param {object} state - redux state object\r\n * @param {string} collection - name of the collection, 'fixed', 'balance' or 'variable'\r\n * @returns {number} - the cost per baseUnit in baseCurrency\r\n */\r\nconst getCollectionCostPerBaseUnit = createCachedSelector(\r\n    [getCollectionIngredients, getCollectionTotalQuantity, getConfig, getRates],\r\n    (ingredients, totalQuantity, config, rates) => costCalculation(ingredients, totalQuantity, config, rates)\r\n)(\r\n    (state, collection) => collection\r\n)\r\n\r\n\r\n\r\nexport {\r\n    getRates,\r\n    getLoadingStatus,\r\n    getUnitDefinitions,\r\n    getBaseUnit,\r\n    getUnitType,\r\n    getBaseCurrency,\r\n    getBaseCurrencyExchangeRate,\r\n    getCollectionIngredients,  \r\n    getIngredients,\r\n    getIngredientsTotalQuantity,\r\n    getCollectionTotalQuantity,\r\n    getCollectionPercentOfTotal,\r\n    getCollectionCostPerBaseUnit\r\n}","import React, { useMemo } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport codes from '../codes'\r\nimport { getRates } from '../redux/selectors'\r\n\r\nconst codeDescription = (code) => code in codes? codes[code] : code\r\n\r\nconst CurrencyDropdown = ({rates, id, label, value, onChange, className}) => {\r\n    \r\n    const currencyOptions = useMemo(() => {\r\n        return Object.keys(rates)\r\n            .map(code => <MenuItem key={code} value={code}>{`${codeDescription(code)} (${code})`}</MenuItem>)\r\n    },[rates])\r\n\r\n    const labelId = `${id}-label`\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                {currencyOptions}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    rates: getRates(state),\r\n})\r\n    \r\nexport default connect(mapStateToProps)(CurrencyDropdown)\r\n","import React, { useMemo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport { getUnitDefinitions } from '../redux/selectors'\r\n\r\nconst MeasureDropdown = ({ definitions, value, id, label, onChange, pluralUnitNames, className }) => {\r\n    \r\n    const measureOptions = useMemo(() => definitions.map((measure, index) => {\r\n            return(\r\n                <MenuItem key={index} value={measure.unit}>\r\n                {`${measure[pluralUnitNames ? 'plural' : 'singular']} (${measure.unit})`}\r\n                </MenuItem>\r\n            )\r\n        }),[definitions, pluralUnitNames]) \r\n\r\n    const labelId = `${id}-label`\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                {measureOptions}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    definitions: getUnitDefinitions(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(MeasureDropdown)\r\n","import React from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst UnitTypeDropdown = ({ value, id, label, onChange, className }) => {\r\n    \r\n    const labelId = `${id}-label`\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={className} size='small' fullWidth>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n            labelId={labelId}\r\n            id={id}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n            label={label}\r\n            >\r\n                <MenuItem key={1} value='mass' >Mass</MenuItem>\r\n                <MenuItem key={2} value='volume' >Volume</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default UnitTypeDropdown\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport CurrencyDropdown from './CurrencyDropdown'\r\nimport { getBaseCurrency, getBaseUnit, getUnitType } from '../redux/selectors'\r\nimport { changeBaseCurrency, changeUnitType, changeBaseUnits } from '../redux/config'\r\nimport MeasureDropdown from './MeasureDropdown'\r\nimport UnitTypeDropdown from './UnitTypeDropdown'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dropdownContainer: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nconst ProjectOptions = (props) => {\r\n    const { baseCurrency, unitType, baseUnit, changeBaseCurrency, changeUnitType, changeBaseUnits } = props\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid item container direction='row' spacing={3} alignItems='center'>\r\n            <Grid item>\r\n                <Typography variant='h6'>Project Options:</Typography>\r\n            </Grid>\r\n            <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                <CurrencyDropdown\r\n                    id='baseCurrencySelect'\r\n                    label='base currency'\r\n                    value={baseCurrency}\r\n                    onChange={changeBaseCurrency}\r\n                />\r\n            </Grid>\r\n            <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                <UnitTypeDropdown\r\n                    id='unitTypeSelect'\r\n                    label='unit types'\r\n                    value={unitType}\r\n                    onChange={changeUnitType}\r\n                />\r\n            </Grid>\r\n            <Grid item className={classes.dropdownContainer} xs={12} md='auto'>\r\n                <MeasureDropdown \r\n                    id='baseUnitSelect'\r\n                    label='base units'\r\n                    value={baseUnit}\r\n                    onChange={changeBaseUnits}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n        baseCurrency: getBaseCurrency(state),\r\n        unitType: getUnitType(state),\r\n        baseUnit: getBaseUnit(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeBaseCurrency, changeUnitType, changeBaseUnits })(ProjectOptions)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { getBaseUnit, getIngredients } from '../redux/selectors'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    editButton: {\r\n        padding: 0,\r\n        marginLeft: 'auto'\r\n    },\r\n    deleteButton: {\r\n        float: 'right',\r\n        padding: 0,\r\n        marginLeft: '0.3em',\r\n    },\r\n    ingName: {\r\n        width: '150px',\r\n        wordWrap: true\r\n    },\r\n    ingQuant: {\r\n        \r\n    },\r\n    li: {\r\n        padding: theme.spacing(0.5)\r\n    }\r\n}))\r\n\r\nconst IngredientList = ({ ingredients, baseUnit }) => {\r\n    const classes = useStyles()\r\n    const renderedIngredientsList = ingredients.map(ingredient => {\r\n        return (\r\n            <>\r\n                <ListItem key={ingredient.id} className={classes.li} >\r\n                    <Typography variant='body1' className={classes.ingName}>{ingredient.ingredientName}</Typography>\r\n                    <Typography variant='body2' className={classes.ingQuant}>{`${ingredient.quantity} ${baseUnit}`}</Typography>\r\n                    \r\n                    <Tooltip title='Edit ingredient'>\r\n                        <IconButton className={classes.editButton}><EditIcon /></IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title='Delete ingredient'>\r\n                        <IconButton className={classes.deleteButton}><DeleteIcon /></IconButton>\r\n                    </Tooltip>\r\n                </ListItem>\r\n            </>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <List>\r\n            {renderedIngredientsList}\r\n        </List>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ingredients: getIngredients(state),\r\n    baseUnit: getBaseUnit(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(IngredientList)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ProjectOptions from './ProjectOptions'\r\nimport { getBaseCurrency, getBaseUnit } from '../redux/selectors'\r\nimport IngredientList from './IngredientList'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawerContainer: { \r\n        padding: theme.spacing(2) \r\n    },\r\n    container: {\r\n        padding: theme.spacing(2) \r\n    },\r\n    iconButton: {\r\n        padding: 0,\r\n    },\r\n    graph: {\r\n        backgroundColor: 'gray'\r\n    },\r\n    list: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(1), \r\n        maxWidth: '400px'\r\n    },\r\n    topDivider: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst Calculator = props => {\r\n    const { baseUnit, baseCurrency } = props\r\n    const [visible, setVisible] = useState(false)\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Drawer anchor='top' open={visible} onClose={() => setVisible(false)}>\r\n                <div className={classes.drawerContainer}>\r\n                    <ProjectOptions />\r\n                    <Tooltip title='Close options panel'>\r\n                        <IconButton onClick={() => setVisible(false)} style={{float: 'right'}}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n                    \r\n            </Drawer>\r\n            <Grid container direction='column' className={classes.container}>\r\n                <Grid item container direction='row' alignItems='flex-start' alignContent='center' spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant='body1'>Currency: {baseCurrency}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='body1'>Units: {baseUnit}</Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Tooltip title='Project options'>\r\n                            <IconButton className={classes.iconButton} onClick={() => setVisible(true)} >\r\n                                <SettingsIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Tooltip title='Add new ingredient to project'>\r\n                            <IconButton className={classes.iconButton}>\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container spacing={2}>\r\n                    <Grid item xs={12} md={4} className={classes.list}>\r\n                        <Divider className={classes.topDivider}/>\r\n                        <IngredientList />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8} className={classes.graph}>\r\n                        graph\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n    // needs an ingredient list\r\n    // needs to display a graph\r\n    // needs to show some controls for the model\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    baseUnit: getBaseUnit(state),\r\n    baseCurrency: getBaseCurrency(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Calculator)\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { createBrowserHistory } from 'history'\r\nexport default createBrowserHistory()","import React, { useEffect } from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Footer from './Footer'\r\nimport AppHeader from './AppHeader'\r\nimport HowTo from './HowTo'\r\nimport Calculator from './Calculator'\r\nimport About from './About'\r\nimport { fetchCurrencies } from '../redux/currency'\r\nimport history from '../history'\r\n\r\nconst App = ({ fetchCurrencies }) => {\r\n\r\n    useEffect(() => {\r\n        fetchCurrencies()\r\n    }, [fetchCurrencies])\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <Grid container direction='column' >\r\n                <Grid item>\r\n                    <AppHeader />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Calculator} />\r\n                        <Route path=\"/howto\" component={HowTo} />\r\n                        <Route path=\"/about\" component={About} />\r\n                    </Switch>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Footer />\r\n                </Grid>\r\n            </Grid>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default connect(null, { fetchCurrencies })(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport App from './components/App'\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <CssBaseline />\r\n        <App />\r\n    </Root>, \r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}